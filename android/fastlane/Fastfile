import "../../fastlane/Fastfile"

default_platform(:android)
platform :android do
  desc "**Generates a release apk**"
  desc "#### Envs\n" +
  " * **`env`**: Sets the env. It sets the flavour and the dart env. " +
  "The executed command is `build apk --flavor env --dart-define=ENV=env --debug`"
  lane :build_apk do |options|
    build_flutter(options.merge(build_platform: 'apk') )
  end

  desc "**Generates a release app bundle build**"
  desc "#### Envs\n" +
  " * **`env`**: Sets the env. It sets the flavour and the dart env. " +
  "The executed command is `flutter build appbundle --flavor env --dart-define=ENV=env --release`"
  lane :build_appbundle do |options|
    build_flutter(build_platform: 'appbundle', build_type: 'release', flavor: options[:env])
  end

  desc "**Build dev debug app**"
  lane :build_dev_debug_apk do |options|
    build_flutter(build_platform: 'apk',  build_type: 'debug')
  end

  desc "**Assemble prod apk release version**"
  lane :build_prod do
    build_apk(env: "prod")
  end

  desc "**Assemble dev apk release version**"
  lane :build_dev do
    build_apk(env: "dev")
  end

  desc "**Submit a new Beta Build to Firebase app distribution**"
  desc "#### Envs\n" +
  " * **`firebase_app_id`**: Firebase app id.\n" +
  " * **`FIREBASE_SERVICE_ACCOUNT_FILE`**: The path to your Google service account json file.\n" +
  " * **`FIREBASE_TESTERS`**: The email addresses of the testers you want to invite.\n" +
  " You can specify the testers as a comma-separated list of email addresses: \"ali@example.com, bri@example.com, cal@example.com\"\n"
  " * **`FIREBASE_TESTER_GROUPS`**: The tester groups you want to invite." +
  " You can specify the groups as a comma-separated list: \"qa-team, trusted-testers\"\n"
 lane :deploy_firebase_app_distribution do |options|
    env = options[:env]
    firebase_app_id = options[:firebase_app_id]
    clean
    build_apk(env: env, include_git_version_suffix: true, build_type: 'release')
    firebase_app_distribution(
      app: firebase_app_id,
      service_credentials_file: ENV["FIREBASE_SERVICE_ACCOUNT_FILE"],
      testers: ENV["FIREBASE_TESTERS"],
      groups: ENV["FIREBASE_TESTER_GROUPS"],
      release_notes: generate_snapshot_changelog,
      apk_path: "../build/app/outputs/flutter-apk/app-#{env}-release.apk",
    )
  end

  desc "**Deploy a new dev version to the Firebase App Distribution**"
  desc "#### Envs\n" +
  " * **`FIREBASE_APP_ID_DEV`**: Dev Firebase app id.\n" +
  " * **`FIREBASE_SERVICE_ACCOUNT_FILE`**: The path to your Google service account json file.\n" +
  " * **`FIREBASE_TESTERS`**: The email addresses of the testers you want to invite.\n" +
  " You can specify the testers as a comma-separated list of email addresses: \"ali@example.com, bri@example.com, cal@example.com\"\n"
  " * **`FIREBASE_TESTER_GROUPS`**: The tester groups you want to invite." +
  " You can specify the groups as a comma-separated list: \"qa-team, trusted-testers\"\n"
  lane :deploy_firebase_dev do
    deploy_firebase_app_distribution(env: 'dev', firebase_app_id: ENV["FIREBASE_APP_ID_DEV"])
  end

  desc "**Deploy a new prod version to the Firebase App Distribution**"
  desc "#### Envs\n" +
  " * **`FIREBASE_APP_ID_PROD`**: Production Firebase app id.\n"
  " * **`FIREBASE_SERVICE_ACCOUNT_FILE`**: The path to your Google service account json file.\n" +
  " * **`FIREBASE_TESTERS`**: The email addresses of the testers you want to invite." +
  " You can specify the testers as a comma-separated list of email addresses: \"ali@example.com, bri@example.com, cal@example.com\"\n"
  " * **`FIREBASE_TESTER_GROUPS`**: The tester groups you want to invite." +
  " You can specify the groups as a comma-separated list: \"qa-team, trusted-testers\"\n"
  lane :deploy_firebase_prod do
    deploy_firebase_app_distribution(env: 'prod', firebase_app_id: ENV["FIREBASE_APP_ID_PROD"])
  end

  desc "**Deploy a new version to the Google Play**"
  desc "#### Envs\n" +
  " * **`GOOGLE_PLAY_TRACK`**: Sets the release track. The default value is `internal`\n" +
  " * **`GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_FILE`**: Sets the service account file.\n" +
  " * **`GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_CONTENT`**: Sets the service account content file."
  lane :deploy_prod do
    build_appbundle(env: 'prod')
    upload_to_play_store(
      track: 'internal',
      json_key: ENV['GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_FILE'],
      json_key_data: ENV['GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS_CONTENT'],
      aab_paths: ["#{root_path}/build/app/outputs/bundle/prodRelease/app-prod-release.aab"],
    )
  end
end
